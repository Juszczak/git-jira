#!/usr/bin/env bash

cat << EOM

       _ _        _ _
  __ _(_) |_     (_|_)_ __ __ _
 / _  | | __|____| | | '__/ _  |
| (_| | | ||_____| | | | | (_| |
 \__, |_|\__|   _/ |_|_|  \__,_|
 |___/         |__/

EOM

if [[ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" != true ]]; then
    echo "Not a git repository (or any of the parent directories). Run the command inside the repository you would like to use the plugin in.";
    exit 1;
fi

HOOKURL="https://raw.githubusercontent.com/Juszczak/git-jira/master/hooks/prepare-commit-msg"
HOOKPATH="$(git rev-parse --show-toplevel)/.git/hooks/prepare-commit-msg"

if echo "$*" | grep -e "\b--uninstall\b" -q; then
    cat << EOM
This script will remove

    $HOOKPATH

EOM
    read -n1 -r -p "Press $(tput bold)Enter$(tput sgr0) to continue the uninstall process or anything else to abort: $(tput sc)" control
    if [ ! ${#control} -eq 0 ]; then
        printf "%s" "$(tput rc)$(tput setaf 1)Abort$(tput sgr0)"
        echo
        echo -e "\nAborting. See you 👋"
        exit 0
    else
        printf "%s" "$(tput rc)$(tput setaf 2)Uninstall$(tput sgr0)"
        echo
        if [ -f "$HOOKPATH" ]; then
            rm "$HOOKPATH"
            echo "The script has been removed 👍"
        else
            echo "No script found 🤷 Nothing to do"
        fi
    fi

    if git config --local --get-regexp jira &> /dev/null; then
        echo
        echo "Do you want to remove the configuration as well?"
        echo
        read -n1 -r -p "Press $(tput bold)Enter$(tput sgr0) to remove the configuration or anything else to abort: $(tput sc)" control
        if [ ${#control} -eq 0 ]; then
            printf "%s" "$(tput rc)$(tput setaf 2)Remove$(tput sgr0)"
            echo
            git config --local --remove-section jira
            echo "Configuration has been removed 🚮"
        else
            printf "%s" "$(tput rc)$(tput setaf 3)Skip$(tput sgr0)"
        fi
    fi
    exit 0
fi


cat << EOM
This script will replace the content of the following file:

    $(tput smso)$HOOKPATH$(tput rmso)

EOM

read -n1 -r -p "Press $(tput bold)Enter$(tput sgr0) to continue or anything else to abort: $(tput sc)" control

if [ ! ${#control} -eq 0 ]; then
    printf "%s" "$(tput rc)$(tput setaf 1)Abort$(tput sgr0)"
    echo -e "\nAborting. See you 👋"
    exit 0
fi

printf "%s" "$(tput rc)$(tput setaf 2)OK$(tput sgr0)"

cat << EOM


Fetching script content from $(tput smul)$HOOKURL$(tput rmul)

EOM

curl $HOOKURL > "$HOOKPATH"
chmod +x "$HOOKPATH"

TOKENURL="https://id.atlassian.com/manage-profile/security/api-tokens"

cat << EOM

🎉 $(tput bold)$(tput setaf 2)Done.$(tput sgr0) The script has been saved in $HOOKPATH

Now obtain your API token from:

    $(tput smul)$TOKENURL$(tput rmul)

EOM

read -n1 -r -p "Press $(tput bold)Enter$(tput sgr0) to open the link above in your default browser or anything else to skip this step: $(tput sc)" control

if [ ${#control} -eq 0 ]; then
    printf "%s" "$(tput rc)$(tput setaf 2)Open$(tput sgr0)"
    OS="$(uname -s)"
    case "${OS}" in
        Linux*)
            if command -v xdg-open &> /dev/null; then
                xdg-open $TOKENURL &> /dev/null
            fi
        ;;
        Darwin*)
            open $TOKENURL
        ;;
    esac
else
    printf "%s" "$(tput rc)$(tput setaf 3)Skip$(tput sgr0)"
fi

echo

read -n1 -r -p "Press $(tput bold)Enter$(tput sgr0) to configure the plugin now or anything else to skip this step: $(tput sc)" control

if [ ${#control} -eq 0 ]; then
    printf "%s" "$(tput rc)$(tput setaf 2)Configure$(tput sgr0)"
    echo

    read -r -p "Your Jira email: " email
    git config jira.email "$email"

    read -r -p "Your Jira token: " token
    git config jira.token "$token"

    read -r -p "Your Jira URL: " url
    git config jira.url "$url"

    git config jira.enabled true
    cat << EOM

The settings have been saved in $(git rev-parse --show-toplevel)/.git/config

To temporary disable the plugin just type:

    git config jira.enabled false

EOM
else
    cat << EOM
$(tput rc)$(tput setaf 3)Skip$(tput sgr0)

Remember to set the configuration entries in your .gitconfig

    git config jira.email <email>
    git config jira.token <token>
    git config jira.url <url>
    git config jira.enabled true

EOM
fi
